"use strict";(self.webpackChunktent=self.webpackChunktent||[]).push([[537],{8537:(t,o,n)=>{n.r(o),n.d(o,{default:()=>s});n(7313);var e=n(8648),r=n(1777),a=n(5668),c=n(3298),i=n(6553),l=n(6417);const s=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("h4",{children:"Tooltips"}),(0,l.jsx)(e.Z,{direction:"horizontal",gap:2,children:["top","right","bottom","left"].map((t=>(0,l.jsx)(r.Z,{placement:t,overlay:(0,l.jsxs)(a.Z,{id:"tooltip-".concat(t),children:["Tooltip on ",(0,l.jsx)("strong",{children:t}),"."]}),children:(0,l.jsxs)(c.Z,{variant:"primary",children:["Tooltip on ",t]})},t)))}),(0,l.jsx)(i.Z,{codeString:"import Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nfunction TooltipPositionedExample() {\n    return (\n    <>\n        {['top', 'right', 'bottom', 'left'].map((placement) => (\n        <OverlayTrigger\n            key={placement}\n            placement={placement}\n            overlay={\n            <Tooltip id=\"id\">\n                Tooltip on <strong>{placement}</strong>.\n            </Tooltip>\n            }\n        >\n            <Button variant=\"secondary\">Tooltip on {placement}</Button>\n        </OverlayTrigger>\n        ))}\n    </>\n    );\n}\n\nexport default TooltipPositionedExample;"})]})},8648:(t,o,n)=>{n.d(o,{Z:()=>p});var e=n(6123),r=n.n(e),a=n(7313),c=n(8524);function i(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c.Hz,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c.cs;const e=[];return Object.entries(t).forEach((t=>{let[r,a]=t;null!=a&&("object"===typeof a?o.forEach((t=>{const o=a[t];if(null!=o){const a=t!==n?"-".concat(t):"";e.push("".concat(r).concat(a,"-").concat(o))}})):e.push("".concat(r,"-").concat(a)))})),e}var l=n(6417);const s=a.forwardRef(((t,o)=>{let{as:n="div",bsPrefix:e,className:a,direction:s,gap:p,...d}=t;e=(0,c.vE)(e,"horizontal"===s?"hstack":"vstack");const m=(0,c.pi)(),h=(0,c.zG)();return(0,l.jsx)(n,{...d,ref:o,className:r()(a,e,...i({gap:p},m,h))})}));s.displayName="Stack";const p=s}}]);